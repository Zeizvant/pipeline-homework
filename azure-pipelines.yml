# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none  # Disable automatic trigger for all branches

pr:
  branches:
    include:
      - '*' 

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: tokens

stages:
- stage: PrepareEnvironment
  displayName: Prepare Environment
  jobs:
  - job: InstallDependencies
    displayName: Install Dependencies
    steps:
    - script: |
        echo "##vso[task.setvariable variable=Token]$(key1)"
        echo $(key1)
    - script: |
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable openjdk-17
        sudo apt-get update
        sudo apt-get install -y maven
        mvn -version
        wget https://github.com/allure-framework/allure2/releases/download/2.28.0/allure-2.28.0.tgz
        sudo tar -zxvf allure-2.28.0.tgz -C /opt/
        sudo ln -s /opt/allure-2.28.0/bin/allure /usr/bin/allure
        sudo npm install -g allure-commandline --save-dev
      displayName: 'Install Dependencies'

- stage: RunTests
  displayName: Run Tests
  dependsOn: PrepareEnvironment
  jobs:
  - job: ExecuteTests
    displayName: Execute Tests
    steps:
    - task: Maven@3
      displayName: 'Run Tests with Maven'
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'test'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: 1.17
        mavenAuthenticateFeed: false
        publishJUnitResults: true
        mavenOptions: 'Default'
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        options: 'test -Dsurefire.suiteXmlFiles=$(System.DefaultWorkingDirectory)/testng.xml'  

- stage: GenerateAndPublishAllureReport
  displayName: Generate and Publish Allure Report
  dependsOn: RunTests
  jobs:
  - job: GenerateReport
    displayName: Generate Report
    steps:
    - script: |
        allure generate --clean "$(System.DefaultWorkingDirectory)/target/allure-results" -o "$(System.DefaultWorkingDirectory)/allure-report"
      displayName: 'Generate Allure Report'
  - job: PublishArtifact
    displayName: Publish Artifact
    dependsOn: GenerateReport
    steps:
    - task: PublishPipelineArtifact@1
      displayName: 'Publish Allure Report'
      inputs:
        targetPath: '$(System.DefaultWorkingDirectory)/allure-report'
        artifact: 'allure-report'
  
- stage: PublishToAzureDevOps
  displayName: Publish to Azure DevOps
  dependsOn: GenerateAndPublishAllureReport
  jobs:
  - job: PublishReport
    displayName: Publish Report to Azure DevOps
    steps:
    - task: DownloadPipelineArtifact@2
      displayName: 'Download Allure Report'
      inputs:
        artifact: 'allure-report'
        path: '$(System.DefaultWorkingDirectory)/allure-report'
    - task: PublishAllureReport@1
      inputs:
        testResultsDir: '''$(System.DefaultWorkingDirectory)/allure-report/allure-results'''

schedules:
  - cron: "0 0 * * 0" 
    displayName: Weekly Tests
    branches:
      include:
        - azure-pipelines
    always: true