# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none  # Disable automatic trigger for all branches

pr:
  branches:
    include:
      - '*' 

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: tokens

stages:
- stage: PrepareEnvironment
  displayName: Prepare Environment
  jobs:
  - job: InstallDependencies
    displayName: Install Dependencies
    steps:
    - script: |
        echo "##vso[task.setvariable variable=Token]$(key1)"
        echo $(key1)
    - script: |
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
        sudo apt-get update
        sudo apt-get install -y openjdk-17-jdk
        sudo apt-get update
        sudo apt-get install -y maven
        wget https://github.com/allure-framework/allure2/releases/download/2.28.0/allure-2.28.0.tgz
        sudo tar -zxvf allure-2.28.0.tgz -C /opt/
        sudo ln -s /opt/allure-2.28.0/bin/allure /usr/bin/allure
        echo 'export PATH=$PATH:/opt/allure-2.28.0/bin' >> ~/.bashrc
        source ~/.bashrc
        allure --version
      displayName: 'Prepare Environment'

- stage: RunTests
  displayName: Run Tests
  dependsOn: PrepareEnvironment
  jobs:
  - job: ExecuteTests
    displayName: Execute Tests
    steps:
    - task: Maven@3
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'test -Dsurefire.suiteXmlFiles=$(System.DefaultWorkingDirectory)/testng.xml'
        javaHomeOption: 'JDKVersion'
        jdkArchitectureOption: 'x64'
        jdkVersionOption: '1.17'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        mavenAuthenticateFeed: false
        mavenVersionOption: 'Default'
        effectivePomSkip: false
        sonarQubeRunAnalysis: false 

- stage: GenerateAndPublishAllureReport
  displayName: Generate and Publish Allure Report
  dependsOn: RunTests
  jobs:
  - job: GenerateReport
    displayName: Generate Report
    steps:
    - script: |
        wget https://github.com/allure-framework/allure2/releases/download/2.28.0/allure-2.28.0.tgz
        sudo tar -zxvf allure-2.28.0.tgz -C /opt/
        sudo ln -s /opt/allure-2.28.0/bin/allure /usr/bin/allure
        echo 'export PATH=$PATH:/opt/allure-2.28.0/bin' >> ~/.bashrc
        source ~/.bashrc
        allure generate --clean allure-results -o allure-report
      displayName: 'Generate Allure Report'
  - job: PublishArtifact
    displayName: Publish Artifact
    dependsOn: GenerateReport
    steps:
    - task: PublishPipelineArtifact@1
      displayName: 'Publish Allure Report'
      inputs:
        targetPath: 'allure-results'
        artifact: 'allure-report'
  
- stage: PublishToAzureDevOps
  displayName: Publish to Azure DevOps
  dependsOn: GenerateAndPublishAllureReport
  jobs:
  - job: PublishReport
    displayName: Publish Report to Azure DevOps
    steps:
    - task: DownloadPipelineArtifact@2
      displayName: 'Download Allure Report'
      inputs:
        artifactName: 'allure-results'
        targetPath: '$(System.DefaultWorkingDirectory)/public'
    - task: PublishAllureReport@1
      inputs:
        testResultsDir: 'allure-results'

schedules:
  - cron: "0 0 * * 0" 
    displayName: Weekly Tests
    branches:
      include:
        - azure-pipelines
    always: true