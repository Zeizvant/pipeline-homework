# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none
pr:
  branches:
    include:
      - '*'  

pool:
  vmImage: 'ubuntu-latest'

jobs:
- job: execute_tests
  displayName: 'Run Test Automation'
  steps:
  - script: |
      echo "##vso[task.setvariable variable=Token]$(key1)"
      echo $(key1)
  - script: |
      sudo apt-get update
      sudo apt-get install -y google-chrome-stable
      sudo apt-get update
      sudo apt-get install -y openjdk-17-jdk
      java -version
      sudo apt-get update
      sudo apt-get install -y maven
      mvn -version
      wget https://github.com/allure-framework/allure2/releases/download/2.28.0/allure-2.28.0.tgz
      sudo tar -zxvf allure-2.28.0.tgz -C /opt/
      sudo ln -s /opt/allure-2.28.0/bin/allure /usr/bin/allure
      allure --version
    displayName: 'Prepare Environment'
    
  - task: Maven@3
    inputs:
         mavenPomFile: 'pom.xml'
         goals: 'clean test'
         options: '-Dsurefire.suiteXmlFiles=$(Build.SourcesDirectory)/testng.xml'
         javaHomeOption: 'JDKVersion'
         jdkVersionOption: '1.17'
         jdkArchitectureOption: 'x64'
         publishJUnitResults: true
         testResultsFiles: '**/surefire-reports/TEST-*.xml'
         mavenVersionOption: 'Default'
         mavenAuthenticateFeed: false
         effectivePomSkip: false
         sonarQubeRunAnalysis: false
    continueOnError: true

  - script: |
      allure generate --clean allure-results -o allure-report
      ls 
    displayName: 'Generate Report'
  
  - task: DownloadPipelineArtifact@2
    inputs:
      buildType: 'specific'
      project: 'c29df2a7-480e-4ab4-84be-13062beac82d'
      definition: '1'
      buildVersionToDownload: 'latestFromBranch'
      allowPartiallySucceededBuilds: true
      branchName: 'refs/heads/azure-pipelines'
      artifactName: 'allure-report'
      targetPath: '$(Pipeline.Workspace)/allure-report'
    displayName: Publish Report

  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: '$(Pipeline.Workspace)/allure-report'
      artifact: 'allure-report'
    displayName: 'Publish Allure Results'
  
  - task: PublishAllureReport@1
    inputs:
      allureVersion: '2.28.0'
      testResultsDir: 'allure-report'

schedules:
- cron: "0 0 * * 0"
  displayName: Weekly Test Execution
  branches:
    include:
      - azure-pipelines
  always: true